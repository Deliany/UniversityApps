<Window x:Class="GraphSharpExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:graphsharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
        xmlns:zoom="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
        xmlns:isom="clr-namespace:GraphSharp.Algorithms.Layout.Simple.FDP;assembly=GraphSharp"
        xmlns:my="clr-namespace:GraphSharpExample"
        xmlns:converters="clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls"
        Title="MainWindow" Height="768" Width="1024"
        x:Name="root">
    
    <Window.Resources>
        <ResourceDictionary Source="DataTemplate.xaml"/>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <!--<my:EdgeColorConverter x:Key="edgeToEdgeColorConverter"/>
            <Style TargetType="{x:Type graphsharp:EdgeControl}">
                <Style.Setters>
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self},Path=Edge.EdgeColor,Converter={StaticResource edgeToEdgeColorConverter},Mode=TwoWay}"/>
                </Style.Setters>
            </Style>-->


            <converters:EdgeRouteToPathConverter x:Key="routeToPathConverter" />
            <Style TargetType="{x:Type graphsharp:EdgeControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphsharp:EdgeControl}">
                            <Canvas>
                                <Path Stroke="{TemplateBinding Foreground}"
                                
                                MinWidth="1"
                                MinHeight="1"
                                ToolTip="{TemplateBinding ToolTip}"
                                x:Name="edgePath">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathGeometry.Figures>
                                                <MultiBinding Converter="{StaticResource routeToPathConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(graphsharp:GraphCanvas.X)" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(graphsharp:GraphCanvas.Y)" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualWidth" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualHeight" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(graphsharp:GraphCanvas.X)" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(graphsharp:GraphCanvas.Y)" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualWidth" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualHeight" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="RoutePoints" />
                                                </MultiBinding>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                                <my:EdgeContentPresenter Content="{Binding Edge.Tag, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="graphsharp:GraphElementBehaviour.HighlightTrigger"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
                <Setter Property="MinWidth"
                Value="3" />
                <Setter Property="MinHeight"
                Value="3" />
                <Setter Property="Background"
                Value="Red" />
                <Setter Property="Foreground"
                Value="Silver" />
                <Setter Property="Opacity"
                Value="0.5" />
                <Style.Triggers>
                    <Trigger Property="graphsharp:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                        <Setter Property="Foreground"
                        Value="Black" />
                    </Trigger>
                    <Trigger Property="graphsharp:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True">
                        <Setter Property="Foreground"
                        Value="Yellow" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="graphsharp:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                            <Condition Property="graphsharp:GraphElementBehaviour.SemiHighlightInfo"
                               Value="InEdge" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground"
                        Value="Red" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="graphsharp:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                            <Condition Property="graphsharp:GraphElementBehaviour.SemiHighlightInfo"
                               Value="OutEdge" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground"
                        Value="Blue" />
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

        </Grid.Resources>
        <!--<Button Width="50" Height="50" Margin="4,10,463,259" Content="Click" Click="Button_Click_1" />-->
        
        <zoom:ZoomControl Margin="0,37,0,0" >
            <my:TaggedGraphLayout x:Name="graphLayout" Graph="{Binding ElementName=root, Path=Graph}" 
                                    LayoutAlgorithmType="ISOM" OverlapRemovalAlgorithmType="FSA" HighlightAlgorithmType="Simple" OverlapRemovalConstraint="Must" ShowAllStates="False">
                <my:TaggedGraphLayout.LayoutParameters>
                    <isom:ISOMLayoutParameters Width="1200"
                                               Height="1200" />
                </my:TaggedGraphLayout.LayoutParameters>
                </my:TaggedGraphLayout>
        </zoom:ZoomControl>
        <ComboBox HorizontalAlignment="Left" Margin="141,10,0,0" VerticalAlignment="Top" Width="120" SelectedIndex="0" SelectionChanged="ComboBox_SelectionChanged_1">
            <ComboBoxItem Content="Circular"/>
            <ComboBoxItem Content="Tree"/>
            <ComboBoxItem Content="FR"/>
            <ComboBoxItem Content="BoundedFR"/>
            <ComboBoxItem Content="KK"/>
            <ComboBoxItem Content="ISOM"/>
            <ComboBoxItem Content="LinLog"/>
            <ComboBoxItem Content="EfficientSugiyama"/>
            <ComboBoxItem Content="CompoundFDP"/>
        </ComboBox>
        <Label Content="LayoutAlgorithmType:" HorizontalAlignment="Left" Margin="10,6,0,0" VerticalAlignment="Top" RenderTransformOrigin="-0.026,-0.077"/>

    </Grid>
</Window>
